name: Build & Release

on:
  push:
    paths-ignore:
      - 'README.md'
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  #set_version:
  #  runs-on: ubuntu-latest
  #  outputs:
  #    version: ${{ steps.version.outputs.version }}
  #
  #  steps:
  #    - uses: actions/checkout@v3
  #    - id: version
  #      run: |
  #        git_hash=$(git rev-parse --short "$GITHUB_SHA")
  #        export FILENAME="$(date '+%Y-%m-%dT%H.%M')-${git_hash}"
  #
  #        echo Output Filename: $FILENAME
  #        echo "version=${FILENAME}" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    #needs: set_version
    
    steps:
    - uses: actions/checkout@v3

    - name: Use latest Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Restore dependencies
      run: bun install

    - name: Build
      run: |
        bun run prod

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  release:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v3
    - name: Generate Changelog
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        output-file: "false"

    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist

    - name: List working directory
      run: ls -a

    - name: Create Release With Asset
      id: Release-AIO
      uses: Hs1r1us/Release-AIO@v2.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body: ${{ steps.changelog.outputs.clean_changelog }}
        tag_name: "${{ steps.changelog.outputs.version }}"
        release_name: "v${{ steps.changelog.outputs.version }}"
        asset_files: 'openWithVRCX.user.js'
